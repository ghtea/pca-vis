import { useMemo } from "react";

import Head from "next/head"
import pcaResult from "public/pca-result.json"
import { Flex } from "theme-ui"
import { VictoryChart, VictoryScatter, VictoryTheme } from "victory"


type RefinedPlayer = typeof pcaResult.data[0] & {symbol?: string}; 

export default function Home() {

  const refinedData = useMemo(()=>{
    let newRefinedData: RefinedPlayer[] = []

    newRefinedData = pcaResult.data.map(eachPlayer => {
      const newEachPlayer:RefinedPlayer = eachPlayer;
      newEachPlayer["symbol"] = "circle"
      if (newEachPlayer["포지션"]=== "MF") {
        newEachPlayer["symbol"] = "diamond"
      }
      else if (newEachPlayer["포지션"] === "FW") {
        newEachPlayer["symbol"] = "triangleUp"
      }
      else if (newEachPlayer["포지션"] === "DF") {
        newEachPlayer["symbol"] = "triangleDown"
      }
      else if (newEachPlayer["포지션"] === "GK") {
        newEachPlayer["symbol"] = "square"
      }
      return newEachPlayer;
    })

    return newRefinedData
  }, []);
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex>
        <VictoryChart
          theme={VictoryTheme.material}
          // domain={{ x: [0, 5], y: [0, 7] }}
        >
          <VictoryScatter
            style={{ 
              data: { fill: ({ datum }) => datum["team"] === "JS" ? "#000000" : "#c43a31", }, 
              labels: { fontSize: 4},
            }}
            size={3}
            x="0"
            y="1"
            data={refinedData}
            labels={({ datum }) => `${datum["team"]} ${datum["no."]}`}
          />
        </VictoryChart>
      </Flex>
    </>
    
  )
}
